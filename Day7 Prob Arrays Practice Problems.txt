Q.1. Write a program in the following steps
a. Generates 10 Random 3 Digit number.
b. Store this random numbers into a array.
c. Then find the 2nd largest and the 2nd smallest element without sorting the array.

Answer-
for ((a=1; a<=9;a++))
do
arr[$a]=$((RANDOM%900+100))
done
echo ${arr[@]}
size=${#arr[@]}
for ((i=1; i<=$size ;i++))
#       1    3        1++
do
        for (( j=$i+1; j<=$size ;j++))
#               2        2<=3    2++
        do
                if [ ${arr[i]} -gt ${arr[j]} ]
                then
                    temp=${arr[i]};
                    echo "temp.."$temp
                    arr[i]=${arr[j]};
                        echo "arr[i]..."${arr[i]}
                    arr[j]=$temp;
                    fi
        done
done
echo " Array.." ${arr[@]}
echo "Second largest number..."${arr[$size-1]}
echo "Second smallest number..."${arr[2]}
--------------------------------------------------------------------------------------------

Output

91940@LAPTOP-BEPC3SST MINGW64 ~/Desktop/TFP-630/Assignments/Day7
$ bash 10_random_3_digit.sh
690 744 712 663 259 570 707 707 768
temp..690
arr[i]...663
temp..663
arr[i]...259
temp..744
arr[i]...712
temp..712
arr[i]...690
temp..690
arr[i]...663
temp..663
arr[i]...570
temp..744
arr[i]...712
temp..712
arr[i]...690
temp..690
arr[i]...663
temp..744
arr[i]...712
temp..712
arr[i]...690
temp..744
arr[i]...712
temp..712
arr[i]...707
temp..744
arr[i]...712
temp..712
arr[i]...707
temp..744
arr[i]...712
 Array.. 259 570 663 690 707 707 712 744 768
Second largest number...744
Second smallest number...570
------------------------------------------------------------------------------------------

2.Extend the above program to sort the array and then find the 2nd largest
and the 2nd smallest element.

Answer-

#!/bin/bash
arr=(1 2 3 4 5 8 7 12  11 )
len=${#arr[@]}
temp=0

for (( i=0; i<$len; i++ ))
do
    for ((  j=i+1; j<$len; j++ ))
    do
      if [  ${arr[i]}  -lt ${arr[j]} ]
       then
           temp=${arr[i]}
           arr[i]=${arr[j]}
           arr[j]=$temp
     fi
  done
done
echo "${arr[@]}"
echo "Second largest number is:${arr[1]}"
echo "Second smallest number is:${arr[7]}"
-----------------------------------------------------------------------------------------
Output

91940@LAPTOP-BEPC3SST MINGW64 ~/Desktop/TFP-630/Assignments/Day7
$ bash 2nd_largest_2nd_smallest.sh
768 744 712 707 707 690 663 570 259
second largest number is:744
second smallest number is:570
-----------------------------------------------------------------------------------------

3.Extend the Prime Factorization Program to store all the Prime Factors of a
  number n into an array and finally display the output.

Answer-
#!/bin/bash
read -p "Enter Numbers:"
temp=$number

declare -a primefactors
index=0
isprime="true"
for(( n=2; n<=$number; n++ ))
do
   for(( i=2; i<=n/2; i++ ))
   do
      if [ $((n%i)) -eq 0 ]
      then
          isprime="false"
      fi
   done

if [ $isprime=="true" ]
then
     if [ $(($number%$n))  -eq 0 ]
     then
           number=$(($number/$n))
           primeFactors[$index]=$n
           ((index++))
           n=1
     fi
     fi
fi
isprime="true"
done
echo "prime factors $temp are:"${primefactors[@]}
---------------------------------------------------------------------------------------

Output
-----------------------------------------------------------------------------------

4. Write a Program to show Sum of three Integer adds to ZERO
Answer-

#!/bin/bash

arr=(1 2 -3 2 -2)

len=${#arr[@]}
echo $len

for((  i=0; i<$len; i++ ))
do
   for((  j=0; j<$len; j++ ))
   do
     for((  k=0; k<$len; k++ ))
     do
         if [ $((${arr[i]}+${arr[j]}+${arr[k]}))  -eq 0 ]
         then
              echo "${arr[i]} ${arr[j]} ${arr[k]}"
         fi
     done
   done
done
------------------------------------------------------------------------------------------
Output

91940@LAPTOP-BEPC3SST MINGW64 ~/Desktop/TFP-630/Assignments/Day7
$ bash adds_to_zero.sh
5
1 1 -2
1 2 -3
1 -3 2
1 -3 2
1 2 -3
1 -2 1
2 1 -3
2 -3 1
-3 1 2
-3 1 2
-3 2 1
-3 2 1
2 1 -3
2 -3 1
-2 1 1
-------------------------------------------------------------------------------------------

Q.5.Take a range from 0 â€“ 100, find the digits that are repeated twice like 33, 77,
  etc and store them in an array

Answer-

index=0
for((i=1;i<=100;i++))
do
	if((i%11==0))
	then
	array[index]=$((i))
	((index++))
	fi
done
echo "array is "
echo ${array[@]}
----------------------------------------------------------------------------------------

Output

91940@LAPTOP-BEPC3SST MINGW64 ~/Desktop/TFP-630/Assignments/Day7
$ bash repeated_digits.sh
array is
11 22 33 44 55 66 77 88 99
------------------------------------------------------------------------------------------